Consol is used to keepm travk of output.
Use console.log("Hello!"); to print something or log it.
Data type: Strings are in double quotes and are any random numbers and letters. Numbers — Any number, including numbers with decimals: 4, 1516, .002, 23.42. In the example above, 40.7 is a number.
          Booleans — Either true or false, with no quotations. In the example above, true is a boolean.
          Null — Can only be null. It represents the absence of value.
Math: JavaScript supports the following math operators:
      Add: +
      Subtract: -
      Multiply: *
      Divide: /
Use .lenght to find the number of characters in a instance, which is anything you submit. Example: console.log("Teaching the world how to code".length);
Method makes stuff happen. You can use them inside a brcket with a (0 at the end of them to make them do stuff. On the first line, the .toUpperCase() method is called on the string instance 'Hello'. The result is logged to the console. This method returns a string in all capital letters: 'HELLO'.
On the second line, the .startsWith() method is called on the string instance "Hey". This method also accepts the character 'H' as an input between the opening and closing parentheses. Since the string 'Hey' does start with the letter 'H', the method returns the boolean true.
Use https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/prototype to look at stuff.
To remove whitespace put the .trim method.
Library, use to call a method without an instance. Just put it in console.log.
Math.random() * 50; It will retiurn a number between 0 and 1. Use the * and 50.
Math.floor rounds the number down to the nearest whole number.
Example of putting things in brackets:
console.log(Math.floor(Math.random() * 100))
Comment put after // or for a multy line comment put it between /* and */
Variables: 
const, short for constant, is a JavaScript keyword that creates a new variable with a value that cannot change.
myName is the variable's name. Notice that the word has no spaces, and we capitalized the N. Capitalizing in this way is a standard convention in JavaScript called camelCasing, because the capital letters look like the humps on a camel's back.
= is the assignment operator. It assigns the value ('Arya') to the variable (myName).
'Arya' is the value assigned (=) to the variable myName. Example:
const myName = 'Arya';
After the variable is declared, we can print 'Arya' to the console with: console.log(myName).
Use let to create a more changable vafriable.
Math
The first three operators (+=, -=, and *=) perform the mathematical operation of the first operator (+, -, or *) using the number on the right, then assign the new value to the variable.
The last two operators are the increment (++) and decrement (--) operators. These operators are responsible for increasing and decreasing a number variable by one, respectively.

The JavaScript term for inserting the data saved to a variable into a string is string interpolation.

The + operator, known until now as the addition operator, is used to interpolate (insert) a string variable into a string, as follows:

let myPet = 'armadillo';
console.log('I own a pet ' + myPet + '.'); 
// Output: 'I own a pet armadillo.'
You can accomplis the same thing by using ${}. Example: console.log(`I own a pet ${myPet}.`) Make sure to put those cool things instead of quotations marks.


Review

Variables hold reusable data in a program.
JavaScript will throw an error if you try to reassign const variables.
You can reassign variables that you create with the let keyword.
Unset variables store the primitive data type undefined.
Mathematical assignment operators make it easy to calculate a new value and assign it to the same variable.
The + operator is used to interpolate (combine) multiple strings.
In JavaScript ES6, backticks (`) and ${} are used to interpolate values into a string.
